package com.fiftytwomoments.ui {	import com.fiftytwomoments.data.SubmittedMoment;	import com.fiftytwomoments.DisplayContents;	import com.fiftytwomoments.services.MomentsData;	import com.greensock.loading.ImageLoader;	import com.greensock.loading.LoaderMax;	import com.greensock.plugins.TransformAroundCenterPlugin;	import com.greensock.plugins.TransformAroundPointPlugin;	import com.greensock.plugins.TweenPlugin;	import com.nanaimostudio.utils.TraceUtility;	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.geom.Point;	import flash.text.TextFormat;	import org.casalib.display.CasaBitmap;	import org.casalib.display.CasaMovieClip;	import org.casalib.display.CasaSprite;	import flash.text.TextField;	//import mx.core.BitmapAsset;	import com.greensock.*;	import com.greensock.easing.*;		/**	 * ...	 * @author Boon Chew	 */	public class PhotoContent extends CasaMovieClip	{		public var captionTitle:TextField;		public var captionText:TextField;				public var photoTitle:TextField;		public var photo:CasaSprite;		public var background:Sprite;				// used by submitted photo only		public var details:PhotoDetails;				private var bitmap:CasaBitmap;		private var _interactionDelegate:Object;		private var _useDefaultText:Boolean;		private var imageLoader:ImageLoader;		private var flipSpeed:Number = 0.3;		private var timeline:TimelineMax;		private var isShowingDetails:Boolean;				private var _week:int;				// only submitted photo has this set - featured photo doesn't have this value set		private var _submittedIndex:int;				public function PhotoContent() 		{			details = new PhotoDetails();			details.name = "details";			details.graphics.beginFill(0xcecece);			details.graphics.drawRect(-320, -212, 640, 424);			details.graphics.endFill();			addChild(details);						details.rotationY = -90;			details.alpha = 0;						photo = new CasaSprite();			photo.name = "photo";			//photo.x = -320;			//photo.y = -212;			addChild(photo);						captionTitle.text = "";			captionText.text = "";						this.mouseChildren = false;			this.interactionEnabled = false;						TweenPlugin.activate([TransformAroundPointPlugin]);			timeline = new TimelineMax( { paused:true } );			timeline.append(TweenMax.to(photo, flipSpeed, { rotationY:90, visible:false }))			timeline.append(TweenMax.to(details, 0, { alpha:1, immediateRender:false }))			timeline.append(TweenMax.to(details, flipSpeed, { rotationY: 0 }))		}				public function resetToFront():void		{			isShowingDetails = false;			timeline.tweenTo(0);		}				public function set useDefaultText(value:Boolean):void		{			_useDefaultText = value;		}				private function onClick(e:MouseEvent):void 		{			TraceUtility.debug(this, "target: " + e.target);			//TraceUtility.debug(this, "onClick " + _interactionDelegate + " " + Boolean(_interactionDelegate is DisplayContents) + " " + _interactionDelegate.hasOwnProperty("onPhotoContentClicked"));			if (_interactionDelegate != null)			{				if (_interactionDelegate.hasOwnProperty("onPhotoContentClicked"))				{					_interactionDelegate.onPhotoContentClicked(this);				}			}		}				public function toggleDetails():void		{			if (isShowingDetails)			{				resetToFront();			}			else			{				isShowingDetails = true;				timeline.tweenTo(timeline.duration);			}		}				public function set interactionEnabled(value:Boolean):void 		{			TraceUtility.debug(this, "interactionEnabled: " + value + " for " + this.name);			this.buttonMode = value;			this.mouseEnabled = value;						if (value)			{				this.addEventListener(MouseEvent.CLICK, onClick);			}			else			{				this.removeEventListener(MouseEvent.CLICK, onClick);			}		}				public function set interactionDelegate(value:Object):void		{			_interactionDelegate = value;		}				public function setText(value:String):void		{			photoTitle.visible = true;			photoTitle.text = value;			background.visible = true;		}				public function clearCaption():void		{			captionTitle.text = "";			captionText.text = ""		}				public function setFeaturedPhoto(photoPath:String, week:int = 1, caption:String = "", showCaption:Boolean = true):void		{			//bitmap = new CasaBitmap(value.bitmapData);			//bitmap.x = -bitmap.width * 0.5;			//bitmap.y = -bitmap.height * 0.5;			//photo.addChild(bitmap);			TraceUtility.debug(this, "loading  " + photoPath + " for " + week);			var photoFullPath:String = "http://52mmnts.me/static/web/html/" + photoPath;						imageLoader = new ImageLoader(photoFullPath, { x: -320, y: -212, width:640, height:424, container:photo, scaleMode:"proportionalOutside", crop:true, bgColor:0 } );			imageLoader.load(true);						var weekValue:String = "";			if (week < 10)			{				weekValue += "0";			}						weekValue += String(week);						captionTitle.text = "moment " + String(weekValue) + " //";						if (showCaption)			{				//TODO: Server-side driven				//if (caption == "")				//{					//caption = "It’s time to act, to learn and grow—to find yourself, and figure out where it is you want to go. Regroup, refocus, and share it with us.";				//}							captionText.text = caption;			}			else			{				captionTitle.text = "";				captionText.text = "";			}						background.visible = false;			photoTitle.visible = false;		}				public function setSubmittedPhoto(momentData:SubmittedMoment, week:int, disableDetails:Boolean = false):void		{			var photoSubpath:String = momentData.photoThumbnail;			var photoFullPath:String = "http://52mmnts.me/static/web/html/" + photoSubpath;						var scaleMode:String = "proportionalInside";						// Look into AutoFitArea for parameters that can be used - http://www.greensock.com/autofitarea/			imageLoader = new ImageLoader(photoFullPath, { x: -320, y: -212, width:640, height:424, container:photo, scaleMode:"proportionalOutside", crop:true, bgColor:0 } );			imageLoader.load(true);						var thumbImageLoader = new ImageLoader(photoFullPath, { x: -128, y: -84.8, width:256, height:169.9, container:details.photoThumb, scaleMode:"proportionalInside", bgColor:0xeeeeee } );			thumbImageLoader.load(true);						TraceUtility.debug(this, "load: " + photoFullPath);			var weekValue:String = "";			if (week < 10)			{				weekValue += "0";			}						weekValue += String(week);						if (disableDetails)			{				details.visible = false;			}			else			{				if (momentData.title != "")				{					details.momentTitle.text	= momentData.title;				}				else				{					details.momentTitle.text	= "moment " + weekValue;				}								details.author.text			= momentData.author;				//details.location.text		= momentData.location.split(",")[0];				var location:Array = [];				if (momentData.city != "")				{					location.push(momentData.city);				}								//if (momentData.state != "")				//{					//location.push(momentData.state);				//}								if (momentData.country != null)				{					location.push(momentData.country);				}								details.location.text = location.join(", ");				momentData.description = momentData.description.replace(/\r\n\r\n\r\n/g, "\r\n");				momentData.description = momentData.description.replace(/\r\n\r\n/g, "\r\n");				details.description.text	= momentData.description;				TraceUtility.debug(this, "description: " + momentData.description + "\n" + details.description.height + " - " + details.description.textHeight);				if (details.description.textHeight > details.description.height)				{					var size:int = 14;					while (details.description.textHeight > details.description.height)					{						size -= 1;						var fmt:TextFormat = new TextFormat(null, size);						details.description.setTextFormat(fmt);					}				}			}						photoTitle.visible = false;			captionTitle.visible = false;			background.visible = false;		}				public function removePhoto():void		{			photo.removeAllChildren(true);			photoTitle.visible = true;			background.visible = true;		}				public function hasPhoto():Boolean		{			return photo.numChildren > 0;		}				public function set week(value:int):void 		{			_week = value;						if (_useDefaultText)			{				photoTitle.text = "moment " + _week;			}			else			{				photoTitle.text = "";			}		}				public function get week():int 		{			return _week;		}				public function get submittedIndex():int 		{			return _submittedIndex;		}				public function set submittedIndex(value:int):void 		{			_submittedIndex = value;		}	}}